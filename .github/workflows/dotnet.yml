name: Build and Deploy MyAPI Applications

on:
  push:
    branches:
      - main

env:
  PROJECT_PATH: "MyAPI.csproj"
  DOTNET_VERSION: "8.0.x"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Publish
        run: dotnet publish ${{ env.PROJECT_PATH }} --configuration Release --output ./publish --self-contained true -r linux-x64

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Copy files to EC2
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H "${{ secrets.EC2_HOST1 }}" >> ~/.ssh/known_hosts
          echo "$EC2_SSH_KEY" > ssh_key.pem
          chmod 600 ssh_key.pem
          # Stop the service and clear the directory
          ssh -i ssh_key.pem ${{EC2_USERNAME}}@${{EC2_HOST1}} '
          sudo systemctl stop MyAPI || true
          rm -rf ~/MyAPI/*
          '
          # Copy the published files
          scp -i ssh_key.pem -r ./publish/* $EC2_USERNAME:~/MyAPI/
          # Copy the service file
          scp -i ssh_key.pem ./MyAPI/MyAPI.service $EC2_USERNAME:~/MyAPI/
          # Setup and start the service
          ssh -i ssh_key.pem $EC2_USERNAME '
           sudo cp ~/MyAPI.service /etc/systemd/system/
           sudo chmod +x ~/MyAPI/MyAPI
           sudo systemctl daemon-reload
           sudo systemctl enable MyAPI
           sudo systemctl restart MyAPI
